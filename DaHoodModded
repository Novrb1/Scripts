print([[


;s, ;silent, ;silentaim - silentaim Uses mousemoveabs() from synapse library
;c, ;cam, ;camlock - camlock Uses Camera.CFrame -- use this instead of silent aim if you dont have synapse
;av, ;aimvelocity - AimVelocity depends on your ping (lower ping 40-70 = av 6, 7 | higher ping 80-100 and over = av 4, 5)
;ws, ;walkspeed - changes walkspeed
;rs, ;runspeed - changes runspeed
;esp, ;unesp
;fov - changes Field Of View
;as, ;astomp - auto stomp people
;ar, ;areset - auto reset when knocked

the button on the side is a keybind to change your aimlock key


]])

local Players = game:GetService("Players")
local lp = Players.LocalPlayer
local mouse = lp:GetMouse()
local uis = game:GetService("UserInputService")
local rservice = game:GetService("RunService")
local cam = workspace.CurrentCamera
local NormalGravity = game.Workspace.Gravity


local Raw = getrawmetatable(game)
local Caller = checkcaller or is_protosmasher_caller or Cer.isCerus
local CallingScript = getcallingscript or get_calling_script
local Closure = newcclosure or read_me or function(Func) return Func end
local CallingMethod = getnamecallmethod or get_namecall_method
setreadonly(Raw,false)
local NewIndex = Raw.__newindex;
Raw.__newindex = Closure(function(self,Property,Value)
	if Caller() then return NewIndex(self,Property,Value) end
	if Property == "WalkSpeed" then return 16 end
	if Property == "JumpPower" then return 37.5 end 
	if Property == "HipHeight" then return 0 end 
	if self == workspace and Property == "Gravity" then return NormalGravity end
	if Property == "CFrame" and self:IsDescendantOf(lp.Character) then return end 
	return NewIndex(self,Property,Value)
end)
local Namecall = Raw.__namecall;
Raw.__namecall = Closure(function(self,...)
local Args = {...}
	if Caller() then 
		if CallingMethod() == "FindFirstChild" and Args[1] == "HumanoidRootPart" then 
			Args[1] = "HumanoidRootPart" 
			return Namecall(self,unpack(Args))
		end
		return Namecall(self,...) 
	end 
	if CallingMethod() == "Destroy" or CallingMethod() == "Kick" then 
		if self == lp then return wait(9e9) end
		if tostring(self) == 'BodyGyro' or tostring(self) == 'BodyVelocity' then return wait(9e9) end 
	end
	if CallingMethod() == "BreakJoints" and self == lp.Character then return wait(9e9) end
	return Namecall(self,...)
end)
setreadonly(Raw,true)


function mma(x, y)
    mousemoveabs(x, y)
end
function isSameTeam(Player, Player2)
	return Player.TeamColor == Player2.TeamColor and true or false
end
function getClosestToMouse()
	local closestdis = math.huge
	local closestplr
	for i,v in pairs(Players:GetPlayers()) do
		if v:DistanceFromCharacter(mouse.Hit.p) < closestdis --[[and not isSameTeam(lp, v)]] and v ~= lp and v.Character and v.Character:FindFirstChild("UpperTorso") then
			closestplr = v
			closestdis = v:DistanceFromCharacter(mouse.Hit.p)
		end
	end
	if not closestplr then return lp end
	return closestplr
end

function selp(player)
    local bbg = Instance.new("BillboardGui",game.CoreGui)
    bbg.Name = player.Name
    bbg.AlwaysOnTop = true
    bbg.Enabled = true
    bbg.Size = UDim2.new(1,0,1,0)
    bbg.StudsOffset = Vector3.new(0,2,0)
    local tlabel = Instance.new("TextLabel",bbg)
    tlabel.BackgroundTransparency = 1
    tlabel.Size = UDim2.new(1,0,1,0)
    tlabel.Text = player.Name
    tlabel.TextColor3 = Color3.new(255,255,255)
end

local akey = Enum.KeyCode.Q
local keyss = false
local silentaim = true
local camlock = false
local prediction = 8
local ws = 16
local rs = 21
local shiftdown = false
local recording = false
local as = false
local ar = false

local sg = Instance.new("ScreenGui",game.CoreGui)
local button = Instance.new("TextButton",sg)
button.Position = UDim2.new(1,-200,0.5,-25)
button.Text = tostring(akey)
button.Size = UDim2.new(0,200,0,50)

uis.InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.LeftShift then
        shiftdown = true
    end
    if recording == false and key ~= nil then
        if key.KeyCode == akey then
            keyss = true
            plr = getClosestToMouse()
        end
    end
    if key ~= nil and recording then
        akey = key.KeyCode
        button.Text = tostring(key.KeyCode)
        recording = false
    end
end)
uis.InputEnded:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.LeftShift then
        shiftdown = false
    end
    if recording == false and key ~= nil then
        if key.KeyCode == akey then
            keyss = false
            plr = nil
        end
    end
end)

button.MouseButton1Click:Connect(function()
    recording = true
    button.Text = "..."
end)

mouse.KeyDown:Connect(function(key)
    if key == "p" then
        if lp.Character then
            lp.Character:Destroy()
        end
    end
end)

lp.Chatted:Connect(function(msg)
    local args = string.split(msg, " ")
    if args[1] == ";s" or args[1] == ";silent" or args[1] == ";silentaim" then
        silentaim = true
        camlock = false
    end
    if args[1] == ";c" or args[1] == ";cam" or args[1] == ";camlock" then
        silentaim = false
        camlock = true
    end
    if args[1] == ";av" or args[1] == ";aimvelocity" then
        if args[2] and tonumber(args[2]) and tonumber(args[2]) <= 10 and tonumber(args[2]) >= 1 then
            prediction = tonumber(args[2])
        end
    end
    if args[1] == ";ws" or args[1] == ";walkspeed" then
        if args[2] and tonumber(args[2]) then
            ws = tonumber(args[2])
        end
    end
    if args[1] == ";rs" or args[1] == ";runspeed" then
        if args[2] and tonumber(args[2]) then
            rs = tonumber(args[2])
        end
    end
    if args[1] == ";esp" then
        if args[2] and args[2] ~= "" and args[2] ~= " " then
            if args[2] == "all" then
                for _, v in next, game.Players:GetPlayers() do
                    if v ~= lp then
                        selp(v)
                    end
                end
            else
                for _, v in next, game.Players:GetPlayers() do
                    if v.Name:lower():sub(1, #args[2]) == args[2]:lower() then
                        selp(v)
                    end
                end
            end
        end
    end
    if args[1] == ";unesp" then
        if args[2] and args[2] ~= "" and args[2] ~= " " then
            if args[2] == "all" then
                for _, v in next, game.CoreGui:GetChildren() do
                    for _,z in next, game.Players:GetPlayers() do
                        if v.Name == z.Name then
                            v:Destroy()
                        end
                    end
                end
            else
                for _, v in next, game.CoreGui:GetChildren() do
                    if v.Name:lower():sub(1, #args[2]) == args[2]:lower() then
                        v:Destroy()
                    end
                end
            end
        end
    end
    if args[1] == ";fov" then
        if args[2] and tonumber(args[2]) and tonumber(args[2]) <= 120 and tonumber(args[2]) >= 10 then
            cam.FieldOfView = tonumber(args[2])
        else
            cam.FieldOfView = 70
        end
    end
    if args[1] == ";as" or args[1] == ";astomp" then
        as = not as
    end
    if args[1] == ";ar" or args[1] == ";areset" then
        ar = not ar
    end
end)

game.Players.PlayerRemoving:Connect(function(plrr)
    for _,z in pairs(game.CoreGui:GetChildren()) do
        if z:IsA'BillboardGui' then
            if z.Name == plrr.Name then
                z:Destroy()
            end
        end
    end
end)

rservice.Stepped:Connect(function()
    if silentaim then
        local vector, onScreen = cam:WorldToViewportPoint(plr.Character:FindFirstChild("LowerTorso").Position + plr.Character:FindFirstChild("LowerTorso").Velocity / prediction)
        if keyss and onScreen and isrbxactive() and plr ~= nil then
            mma(vector.X, vector.Y)
        end
    elseif camlock then
        cam.CFrame = CFrame.new(cam.CFrame.p, plr.Character:FindFirstChild("LowerTorso").Position + plr.Character:FindFirstChild("LowerTorso").Velocity / prediction)
    end
end)
rservice.RenderStepped:Connect(function()
    if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
        if shiftdown then
            lp.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = rs
        else
            lp.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = ws
        end
        if as then
            game.ReplicatedStorage.MainRemote:FireServer("Stomp")
        end
        if ar then
            if lp.Character and lp.Character:FindFirstChild("I_LOADED_I") and lp.Character:FindFirstChild("I_LOADED_I")['K.O'].Value == true then
                if lp.Character then
                    lp.Character:Destroy()
                end
            end
        end
    end
    for _,z in pairs(game.Players:GetPlayers()) do
        for _,v in pairs(game.CoreGui:GetChildren()) do
            if z.Name == v.Name then
                if z.Character and z.Character:FindFirstChildOfClass("Humanoid") and z.Character:FindFirstChild("Head") then
                    v.Adornee = z.Character:FindFirstChild("Head")
		else
		    v.Adornee = nil
                end
            end
        end
    end
end) 
